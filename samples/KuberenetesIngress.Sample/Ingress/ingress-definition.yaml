kind: Namespace
apiVersion: v1
metadata:
  name: yarp
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: yarp-config
  namespace: yarp
data:
  yarp.json: |
    {

    }
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: yarp-serviceaccount
  namespace: yarp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: yarp-ingress-clusterrole
  namespace: yarp
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  - extensions
  - networking.internal.knative.dev
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  - extensions
  - networking.internal.knative.dev
  resources:
  - ingresses/status
  verbs:
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: yarp-ingress-clusterrole-nisa-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: yarp-ingress-clusterrole
subjects:
- kind: ServiceAccount
  name: yarp-serviceaccount
  namespace: yarp
---
apiVersion: v1
kind: Service
metadata:
  name: yarp-controller
  namespace: yarp
spec:
  ports:
  - name: api
    port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: ingress-yarp-controller
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ingress-yarp-controller
  name: yarp-controller
  namespace: yarp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-yarp-controller
  template:
    metadata:
      labels:
        app: ingress-yarp-controller
    spec:
      containers:
      - name: yarp-controller
        imagePullPolicy: Always
        image: jkotalik/yarp-controller:0.0.0-19c9e0d733
        ports:
        - containerPort: 8000
          name: api
          protocol: TCP
        env:
        - name: ASPNETCORE_URLS
          value: http://*:8000
      serviceAccountName: yarp-serviceaccount
---
apiVersion: v1
kind: Service
metadata:
  name: yarp-proxy
  namespace: yarp
spec:
  ports:
  - name: proxy
    port: 80
    protocol: TCP
    targetPort: 8000
  - name: proxy-ssl
    port: 443
    protocol: TCP
    targetPort: 8443
  selector:
    app: ingress-yarp
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ingress-yarp
  name: yarp-proxy
  namespace: yarp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-yarp
  template:
    metadata:
      labels:
        app: ingress-yarp
    spec:
      containers:
      - name: yarp-proxy
        imagePullPolicy: Always
        image: <INSERT_REGISTRY>/yarp:<TAG>
        ports:
        - containerPort: 8000
          name: proxy
          protocol: TCP
        - containerPort: 8443
          name: proxy-ssl
          protocol: TCP
        volumeMounts:
        - mountPath: /config
          name: yarp-config
        env:
        - name: ASPNETCORE_URLS
          value: http://*:8000
      volumes:
      - configMap:
          name: yarp-config
        name: yarp-config
---

